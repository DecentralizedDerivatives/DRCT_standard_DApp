// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ApprovalFormComponent /> render() renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ApprovalFormComponent
    handleSubmit={
      [MockFunction] {
        "calls": Array [
          Array [
            undefined,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    selectOptions={Array []}
    store={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form>
        <InputGroup
          tag="div"
        >
          <Field
            component={[Function]}
            label="Select Token"
            name="token"
            options={Object {}}
          />
        </InputGroup>
        <br />
        <InputGroup
          tag="div"
        >
          <Field
            component={[Function]}
            label="Token Amount"
            name="tokenAmount"
            step="0.00001"
          />
        </InputGroup>
        <br />
        <div>
          <button
            className="btn btn-primary"
            type="submit"
          >
            Submit
          </button>
        </div>
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <InputGroup
            tag="div"
          >
            <Field
              component={[Function]}
              label="Select Token"
              name="token"
              options={Object {}}
            />
          </InputGroup>,
          <br />,
          <InputGroup
            tag="div"
          >
            <Field
              component={[Function]}
              label="Token Amount"
              name="tokenAmount"
              step="0.00001"
            />
          </InputGroup>,
          <br />,
          <div>
            <button
              className="btn btn-primary"
              type="submit"
            >
              Submit
            </button>
          </div>,
        ],
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Field
              component={[Function]}
              label="Select Token"
              name="token"
              options={Object {}}
            />,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Select Token",
              "name": "token",
              "options": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Field
              component={[Function]}
              label="Token Amount"
              name="tokenAmount"
              step="0.00001"
            />,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Token Amount",
              "name": "tokenAmount",
              "step": "0.00001",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-primary"
              type="submit"
            >
              Submit
            </button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
              "className": "btn btn-primary",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form>
          <InputGroup
            tag="div"
          >
            <Field
              component={[Function]}
              label="Select Token"
              name="token"
              options={Object {}}
            />
          </InputGroup>
          <br />
          <InputGroup
            tag="div"
          >
            <Field
              component={[Function]}
              label="Token Amount"
              name="tokenAmount"
              step="0.00001"
            />
          </InputGroup>
          <br />
          <div>
            <button
              className="btn btn-primary"
              type="submit"
            >
              Submit
            </button>
          </div>
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <InputGroup
              tag="div"
            >
              <Field
                component={[Function]}
                label="Select Token"
                name="token"
                options={Object {}}
              />
            </InputGroup>,
            <br />,
            <InputGroup
              tag="div"
            >
              <Field
                component={[Function]}
                label="Token Amount"
                name="tokenAmount"
                step="0.00001"
              />
            </InputGroup>,
            <br />,
            <div>
              <button
                className="btn btn-primary"
                type="submit"
              >
                Submit
              </button>
            </div>,
          ],
          "onSubmit": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Field
                component={[Function]}
                label="Select Token"
                name="token"
                options={Object {}}
              />,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Select Token",
                "name": "token",
                "options": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Field
                component={[Function]}
                label="Token Amount"
                name="tokenAmount"
                step="0.00001"
              />,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Token Amount",
                "name": "tokenAmount",
                "step": "0.00001",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="btn btn-primary"
                type="submit"
              >
                Submit
              </button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
                "className": "btn btn-primary",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
