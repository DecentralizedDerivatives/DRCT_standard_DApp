// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OrderBook /> formats money 1`] = `
<span>
   
  $0
   
</span>
`;

exports[`<OrderBook /> formats money 2`] = `
<span>
   
  --
   
</span>
`;

exports[`<OrderBook /> formats money 3`] = `
<span
  className="warning"
>
  $-1.00
</span>
`;

exports[`<OrderBook /> formats money 4`] = `
<span
  className=""
>
  $1.00
</span>
`;

exports[`<OrderBook /> formats percentage 1`] = `
<span>
   
   -- 
   
</span>
`;

exports[`<OrderBook /> formats percentage 2`] = `
<span>
   
  --
   
</span>
`;

exports[`<OrderBook /> formats percentage 3`] = `
<span
  className="warning"
>
  -1.00%
</span>
`;

exports[`<OrderBook /> formats percentage 4`] = `
<span
  className="success"
>
  1.00%
</span>
`;

exports[`<OrderBook /> renders empty component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderBook
    buyOrderError={null}
    contractDuration={0}
    contractMultiplier={0}
    getOrderBook={[Function]}
    loading={false}
    onRowClick={[MockFunction]}
    orderbook={Array []}
    refreshPage={[MockFunction]}
    sendBuyOrder={[Function]}
    sendUnlistOrder={[Function]}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
    userAccount=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <table
        className="table table-hover table-striped table-responsive"
      >
        <thead>
          <tr>
            <th
              colSpan="6"
            >
              Order Book
              <div
                className="warning"
              />
            </th>
          </tr>
          <tr>
            <th
              style={
                Object {
                  "width": "15%",
                }
              }
            >
              Order Id
            </th>
            <th
              style={
                Object {
                  "width": "40%",
                }
              }
            >
              Asset
            </th>
            <th
              style={
                Object {
                  "width": "15%",
                }
              }
            >
              Price (ETH)
            </th>
            <th
              style={
                Object {
                  "width": "15%",
                }
              }
            >
              Quantity
            </th>
            <th>
              Start Date
            </th>
            <th>
              Gain/Loss
            </th>
            <th />
          </tr>
        </thead>
        <tbody>
          <tr>
            <td
              colSpan="12"
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              <h5>
                No Recent Orders
              </h5>
            </td>
          </tr>
        </tbody>
      </table>,
      "className": "table-container order-book",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <thead>
            <tr>
              <th
                colSpan="6"
              >
                Order Book
                <div
                  className="warning"
                />
              </th>
            </tr>
            <tr>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Order Id
              </th>
              <th
                style={
                  Object {
                    "width": "40%",
                  }
                }
              >
                Asset
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Price (ETH)
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Quantity
              </th>
              <th>
                Start Date
              </th>
              <th>
                Gain/Loss
              </th>
              <th />
            </tr>
          </thead>,
          <tbody>
            <tr>
              <td
                colSpan="12"
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                <h5>
                  No Recent Orders
                </h5>
              </td>
            </tr>
          </tbody>,
        ],
        "className": "table table-hover table-striped table-responsive",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <tr>
                <th
                  colSpan="6"
                >
                  Order Book
                  <div
                    className="warning"
                  />
                </th>
              </tr>,
              <tr>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Order Id
                </th>
                <th
                  style={
                    Object {
                      "width": "40%",
                    }
                  }
                >
                  Asset
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Price (ETH)
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Quantity
                </th>
                <th>
                  Start Date
                </th>
                <th>
                  Gain/Loss
                </th>
                <th />
              </tr>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <th
                  colSpan="6"
                >
                  Order Book
                  <div
                    className="warning"
                  />
                </th>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Order Book",
                    <div
                      className="warning"
                    />,
                  ],
                  "colSpan": "6",
                },
                "ref": null,
                "rendered": Array [
                  "Order Book",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": null,
                      "className": "warning",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                ],
                "type": "th",
              },
              "type": "tr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Order Id
                  </th>,
                  <th
                    style={
                      Object {
                        "width": "40%",
                      }
                    }
                  >
                    Asset
                  </th>,
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Price (ETH)
                  </th>,
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Quantity
                  </th>,
                  <th>
                    Start Date
                  </th>,
                  <th>
                    Gain/Loss
                  </th>,
                  <th />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Order Id",
                    "style": Object {
                      "width": "15%",
                    },
                  },
                  "ref": null,
                  "rendered": "Order Id",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Asset",
                    "style": Object {
                      "width": "40%",
                    },
                  },
                  "ref": null,
                  "rendered": "Asset",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Price (ETH)",
                    "style": Object {
                      "width": "15%",
                    },
                  },
                  "ref": null,
                  "rendered": "Price (ETH)",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Quantity",
                    "style": Object {
                      "width": "15%",
                    },
                  },
                  "ref": null,
                  "rendered": "Quantity",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Start Date",
                  },
                  "ref": null,
                  "rendered": "Start Date",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Gain/Loss",
                  },
                  "ref": null,
                  "rendered": "Gain/Loss",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "th",
                },
              ],
              "type": "tr",
            },
          ],
          "type": "thead",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <tr>
              <td
                colSpan="12"
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                <h5>
                  No Recent Orders
                </h5>
              </td>
            </tr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <td
                colSpan="12"
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                <h5>
                  No Recent Orders
                </h5>
              </td>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h5>
                  No Recent Orders
                </h5>,
                "colSpan": "12",
                "style": Object {
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "No Recent Orders",
                },
                "ref": null,
                "rendered": "No Recent Orders",
                "type": "h5",
              },
              "type": "td",
            },
            "type": "tr",
          },
          "type": "tbody",
        },
      ],
      "type": "table",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <table
          className="table table-hover table-striped table-responsive"
        >
          <thead>
            <tr>
              <th
                colSpan="6"
              >
                Order Book
                <div
                  className="warning"
                />
              </th>
            </tr>
            <tr>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Order Id
              </th>
              <th
                style={
                  Object {
                    "width": "40%",
                  }
                }
              >
                Asset
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Price (ETH)
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Quantity
              </th>
              <th>
                Start Date
              </th>
              <th>
                Gain/Loss
              </th>
              <th />
            </tr>
          </thead>
          <tbody>
            <tr>
              <td
                colSpan="12"
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                <h5>
                  No Recent Orders
                </h5>
              </td>
            </tr>
          </tbody>
        </table>,
        "className": "table-container order-book",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr>
                <th
                  colSpan="6"
                >
                  Order Book
                  <div
                    className="warning"
                  />
                </th>
              </tr>
              <tr>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Order Id
                </th>
                <th
                  style={
                    Object {
                      "width": "40%",
                    }
                  }
                >
                  Asset
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Price (ETH)
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Quantity
                </th>
                <th>
                  Start Date
                </th>
                <th>
                  Gain/Loss
                </th>
                <th />
              </tr>
            </thead>,
            <tbody>
              <tr>
                <td
                  colSpan="12"
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <h5>
                    No Recent Orders
                  </h5>
                </td>
              </tr>
            </tbody>,
          ],
          "className": "table table-hover table-striped table-responsive",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <tr>
                  <th
                    colSpan="6"
                  >
                    Order Book
                    <div
                      className="warning"
                    />
                  </th>
                </tr>,
                <tr>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Order Id
                  </th>
                  <th
                    style={
                      Object {
                        "width": "40%",
                      }
                    }
                  >
                    Asset
                  </th>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Price (ETH)
                  </th>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Quantity
                  </th>
                  <th>
                    Start Date
                  </th>
                  <th>
                    Gain/Loss
                  </th>
                  <th />
                </tr>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <th
                    colSpan="6"
                  >
                    Order Book
                    <div
                      className="warning"
                    />
                  </th>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Order Book",
                      <div
                        className="warning"
                      />,
                    ],
                    "colSpan": "6",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Order Book",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": null,
                        "className": "warning",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                  ],
                  "type": "th",
                },
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Order Id
                    </th>,
                    <th
                      style={
                        Object {
                          "width": "40%",
                        }
                      }
                    >
                      Asset
                    </th>,
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Price (ETH)
                    </th>,
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Quantity
                    </th>,
                    <th>
                      Start Date
                    </th>,
                    <th>
                      Gain/Loss
                    </th>,
                    <th />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Order Id",
                      "style": Object {
                        "width": "15%",
                      },
                    },
                    "ref": null,
                    "rendered": "Order Id",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Asset",
                      "style": Object {
                        "width": "40%",
                      },
                    },
                    "ref": null,
                    "rendered": "Asset",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Price (ETH)",
                      "style": Object {
                        "width": "15%",
                      },
                    },
                    "ref": null,
                    "rendered": "Price (ETH)",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Quantity",
                      "style": Object {
                        "width": "15%",
                      },
                    },
                    "ref": null,
                    "rendered": "Quantity",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Start Date",
                    },
                    "ref": null,
                    "rendered": "Start Date",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Gain/Loss",
                    },
                    "ref": null,
                    "rendered": "Gain/Loss",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
            ],
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <td
                  colSpan="12"
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <h5>
                    No Recent Orders
                  </h5>
                </td>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <td
                  colSpan="12"
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <h5>
                    No Recent Orders
                  </h5>
                </td>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h5>
                    No Recent Orders
                  </h5>,
                  "colSpan": "12",
                  "style": Object {
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "No Recent Orders",
                  },
                  "ref": null,
                  "rendered": "No Recent Orders",
                  "type": "h5",
                },
                "type": "td",
              },
              "type": "tr",
            },
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<OrderBook /> renders loading component 1`] = `
Object {
  "instance": OrderBook {
    "context": Object {},
    "props": Object {
      "buyOrderError": null,
      "contractDuration": 0,
      "contractMultiplier": 0,
      "getOrderBook": [Function],
      "loading": true,
      "onRowClick": [MockFunction],
      "orderbook": Array [
        Object {
          "address": "0xaf0ff6be724648362c63921736505354af16ac3a",
          "contractGain": 0,
          "creatorAddress": "0xd8e09fbab17f30e1C2b2Ae85A26EA1F3F31267ef",
          "date": "11/09/2018",
          "orderId": "25",
          "price": "0.20000",
          "quantity": "200",
          "symbol": "ETH/USD",
          "tokenType": "Long",
        },
        Object {
          "address": "0xaf0ff6be724648362c63921736505354af16ac3a",
          "contractGain": 0,
          "creatorAddress": "0xc69c64c226fea62234afe4f5832a051ebc860540",
          "date": "11/09/2018",
          "orderId": "25",
          "price": "0.20000",
          "quantity": "200",
          "symbol": "ETH/USD",
          "tokenType": "Long",
        },
      ],
      "refreshPage": [MockFunction],
      "sendBuyOrder": [Function],
      "sendUnlistOrder": [Function],
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      },
      "userAccount": "0xd8e09fbab17f30e1C2b2Ae85A26EA1F3F31267ef",
    },
    "refs": Object {},
    "renderRows": [Function],
    "setState": [Function],
    "state": null,
    "updater": Updater {
      "_callbacks": Array [],
      "_renderer": ReactShallowRenderer {
        "_context": Object {},
        "_element": <OrderBook
          buyOrderError={null}
          contractDuration={0}
          contractMultiplier={0}
          getOrderBook={[Function]}
          loading={true}
          onRowClick={[MockFunction]}
          orderbook={
            Array [
              Object {
                "address": "0xaf0ff6be724648362c63921736505354af16ac3a",
                "contractGain": 0,
                "creatorAddress": "0xd8e09fbab17f30e1C2b2Ae85A26EA1F3F31267ef",
                "date": "11/09/2018",
                "orderId": "25",
                "price": "0.20000",
                "quantity": "200",
                "symbol": "ETH/USD",
                "tokenType": "Long",
              },
              Object {
                "address": "0xaf0ff6be724648362c63921736505354af16ac3a",
                "contractGain": 0,
                "creatorAddress": "0xc69c64c226fea62234afe4f5832a051ebc860540",
                "date": "11/09/2018",
                "orderId": "25",
                "price": "0.20000",
                "quantity": "200",
                "symbol": "ETH/USD",
                "tokenType": "Long",
              },
            ]
          }
          refreshPage={[MockFunction]}
          sendBuyOrder={[Function]}
          sendUnlistOrder={[Function]}
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
          storeSubscription={
            Subscription {
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "dispatch": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
                Symbol(observable): [Function],
              },
              "unsubscribe": [Function],
            }
          }
          userAccount="0xd8e09fbab17f30e1C2b2Ae85A26EA1F3F31267ef"
        />,
        "_forcedUpdate": false,
        "_instance": [Circular],
        "_newState": null,
        "_rendered": <div
          className="table-container order-book"
        >
          <table
            className="table table-hover table-striped table-responsive"
          >
            <thead>
              <tr>
                <th
                  colSpan="6"
                >
                  Order Book
                  <div
                    className="warning"
                  />
                </th>
              </tr>
              <tr>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Order Id
                </th>
                <th
                  style={
                    Object {
                      "width": "40%",
                    }
                  }
                >
                  Asset
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Price (ETH)
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Quantity
                </th>
                <th>
                  Start Date
                </th>
                <th>
                  Gain/Loss
                </th>
                <th />
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  colSpan="12"
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <Loading />
                </td>
              </tr>
            </tbody>
          </table>
        </div>,
        "_rendering": false,
        "_updater": [Circular],
      },
    },
    Symbol(enzyme.__setState__): [Function],
  },
  "refreshPage": [MockFunction],
  "wrapper": ShallowWrapper {
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <OrderBook
      buyOrderError={null}
      contractDuration={0}
      contractMultiplier={0}
      getOrderBook={[Function]}
      loading={true}
      onRowClick={[MockFunction]}
      orderbook={
        Array [
          Object {
            "address": "0xaf0ff6be724648362c63921736505354af16ac3a",
            "contractGain": 0,
            "creatorAddress": "0xd8e09fbab17f30e1C2b2Ae85A26EA1F3F31267ef",
            "date": "11/09/2018",
            "orderId": "25",
            "price": "0.20000",
            "quantity": "200",
            "symbol": "ETH/USD",
            "tokenType": "Long",
          },
          Object {
            "address": "0xaf0ff6be724648362c63921736505354af16ac3a",
            "contractGain": 0,
            "creatorAddress": "0xc69c64c226fea62234afe4f5832a051ebc860540",
            "date": "11/09/2018",
            "orderId": "25",
            "price": "0.20000",
            "quantity": "200",
            "symbol": "ETH/USD",
            "tokenType": "Long",
          },
        ]
      }
      refreshPage={[MockFunction]}
      sendBuyOrder={[Function]}
      sendUnlistOrder={[Function]}
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
      storeSubscription={
        Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        }
      }
      userAccount="0xd8e09fbab17f30e1C2b2Ae85A26EA1F3F31267ef"
    />,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateError": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <table
          className="table table-hover table-striped table-responsive"
        >
          <thead>
            <tr>
              <th
                colSpan="6"
              >
                Order Book
                <div
                  className="warning"
                />
              </th>
            </tr>
            <tr>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Order Id
              </th>
              <th
                style={
                  Object {
                    "width": "40%",
                  }
                }
              >
                Asset
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Price (ETH)
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Quantity
              </th>
              <th>
                Start Date
              </th>
              <th>
                Gain/Loss
              </th>
              <th />
            </tr>
          </thead>
          <tbody>
            <tr>
              <td
                colSpan="12"
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                <Loading />
              </td>
            </tr>
          </tbody>
        </table>,
        "className": "table-container order-book",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr>
                <th
                  colSpan="6"
                >
                  Order Book
                  <div
                    className="warning"
                  />
                </th>
              </tr>
              <tr>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Order Id
                </th>
                <th
                  style={
                    Object {
                      "width": "40%",
                    }
                  }
                >
                  Asset
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Price (ETH)
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Quantity
                </th>
                <th>
                  Start Date
                </th>
                <th>
                  Gain/Loss
                </th>
                <th />
              </tr>
            </thead>,
            <tbody>
              <tr>
                <td
                  colSpan="12"
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <Loading />
                </td>
              </tr>
            </tbody>,
          ],
          "className": "table table-hover table-striped table-responsive",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <tr>
                  <th
                    colSpan="6"
                  >
                    Order Book
                    <div
                      className="warning"
                    />
                  </th>
                </tr>,
                <tr>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Order Id
                  </th>
                  <th
                    style={
                      Object {
                        "width": "40%",
                      }
                    }
                  >
                    Asset
                  </th>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Price (ETH)
                  </th>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Quantity
                  </th>
                  <th>
                    Start Date
                  </th>
                  <th>
                    Gain/Loss
                  </th>
                  <th />
                </tr>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <th
                    colSpan="6"
                  >
                    Order Book
                    <div
                      className="warning"
                    />
                  </th>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Order Book",
                      <div
                        className="warning"
                      />,
                    ],
                    "colSpan": "6",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Order Book",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": null,
                        "className": "warning",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                  ],
                  "type": "th",
                },
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Order Id
                    </th>,
                    <th
                      style={
                        Object {
                          "width": "40%",
                        }
                      }
                    >
                      Asset
                    </th>,
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Price (ETH)
                    </th>,
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Quantity
                    </th>,
                    <th>
                      Start Date
                    </th>,
                    <th>
                      Gain/Loss
                    </th>,
                    <th />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Order Id",
                      "style": Object {
                        "width": "15%",
                      },
                    },
                    "ref": null,
                    "rendered": "Order Id",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Asset",
                      "style": Object {
                        "width": "40%",
                      },
                    },
                    "ref": null,
                    "rendered": "Asset",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Price (ETH)",
                      "style": Object {
                        "width": "15%",
                      },
                    },
                    "ref": null,
                    "rendered": "Price (ETH)",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Quantity",
                      "style": Object {
                        "width": "15%",
                      },
                    },
                    "ref": null,
                    "rendered": "Quantity",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Start Date",
                    },
                    "ref": null,
                    "rendered": "Start Date",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Gain/Loss",
                    },
                    "ref": null,
                    "rendered": "Gain/Loss",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
            ],
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <td
                  colSpan="12"
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <Loading />
                </td>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <td
                  colSpan="12"
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <Loading />
                </td>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Loading />,
                  "colSpan": "12",
                  "style": Object {
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "td",
              },
              "type": "tr",
            },
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      "type": "div",
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <table
            className="table table-hover table-striped table-responsive"
          >
            <thead>
              <tr>
                <th
                  colSpan="6"
                >
                  Order Book
                  <div
                    className="warning"
                  />
                </th>
              </tr>
              <tr>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Order Id
                </th>
                <th
                  style={
                    Object {
                      "width": "40%",
                    }
                  }
                >
                  Asset
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Price (ETH)
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Quantity
                </th>
                <th>
                  Start Date
                </th>
                <th>
                  Gain/Loss
                </th>
                <th />
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  colSpan="12"
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <Loading />
                </td>
              </tr>
            </tbody>
          </table>,
          "className": "table-container order-book",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <thead>
                <tr>
                  <th
                    colSpan="6"
                  >
                    Order Book
                    <div
                      className="warning"
                    />
                  </th>
                </tr>
                <tr>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Order Id
                  </th>
                  <th
                    style={
                      Object {
                        "width": "40%",
                      }
                    }
                  >
                    Asset
                  </th>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Price (ETH)
                  </th>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Quantity
                  </th>
                  <th>
                    Start Date
                  </th>
                  <th>
                    Gain/Loss
                  </th>
                  <th />
                </tr>
              </thead>,
              <tbody>
                <tr>
                  <td
                    colSpan="12"
                    style={
                      Object {
                        "textAlign": "center",
                      }
                    }
                  >
                    <Loading />
                  </td>
                </tr>
              </tbody>,
            ],
            "className": "table table-hover table-striped table-responsive",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <tr>
                    <th
                      colSpan="6"
                    >
                      Order Book
                      <div
                        className="warning"
                      />
                    </th>
                  </tr>,
                  <tr>
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Order Id
                    </th>
                    <th
                      style={
                        Object {
                          "width": "40%",
                        }
                      }
                    >
                      Asset
                    </th>
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Price (ETH)
                    </th>
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Quantity
                    </th>
                    <th>
                      Start Date
                    </th>
                    <th>
                      Gain/Loss
                    </th>
                    <th />
                  </tr>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <th
                      colSpan="6"
                    >
                      Order Book
                      <div
                        className="warning"
                      />
                    </th>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Order Book",
                        <div
                          className="warning"
                        />,
                      ],
                      "colSpan": "6",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Order Book",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": null,
                          "className": "warning",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "div",
                      },
                    ],
                    "type": "th",
                  },
                  "type": "tr",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <th
                        style={
                          Object {
                            "width": "15%",
                          }
                        }
                      >
                        Order Id
                      </th>,
                      <th
                        style={
                          Object {
                            "width": "40%",
                          }
                        }
                      >
                        Asset
                      </th>,
                      <th
                        style={
                          Object {
                            "width": "15%",
                          }
                        }
                      >
                        Price (ETH)
                      </th>,
                      <th
                        style={
                          Object {
                            "width": "15%",
                          }
                        }
                      >
                        Quantity
                      </th>,
                      <th>
                        Start Date
                      </th>,
                      <th>
                        Gain/Loss
                      </th>,
                      <th />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Order Id",
                        "style": Object {
                          "width": "15%",
                        },
                      },
                      "ref": null,
                      "rendered": "Order Id",
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Asset",
                        "style": Object {
                          "width": "40%",
                        },
                      },
                      "ref": null,
                      "rendered": "Asset",
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Price (ETH)",
                        "style": Object {
                          "width": "15%",
                        },
                      },
                      "ref": null,
                      "rendered": "Price (ETH)",
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Quantity",
                        "style": Object {
                          "width": "15%",
                        },
                      },
                      "ref": null,
                      "rendered": "Quantity",
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Start Date",
                      },
                      "ref": null,
                      "rendered": "Start Date",
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Gain/Loss",
                      },
                      "ref": null,
                      "rendered": "Gain/Loss",
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "th",
                    },
                  ],
                  "type": "tr",
                },
              ],
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr>
                  <td
                    colSpan="12"
                    style={
                      Object {
                        "textAlign": "center",
                      }
                    }
                  >
                    <Loading />
                  </td>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <td
                    colSpan="12"
                    style={
                      Object {
                        "textAlign": "center",
                      }
                    }
                  >
                    <Loading />
                  </td>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Loading />,
                    "colSpan": "12",
                    "style": Object {
                      "textAlign": "center",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "td",
                },
                "type": "tr",
              },
              "type": "tbody",
            },
          ],
          "type": "table",
        },
        "type": "div",
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
          "lifecycles": Object {
            "componentDidUpdate": Object {
              "onSetState": true,
            },
            "getDerivedStateFromProps": true,
            "getSnapshotBeforeUpdate": true,
            "setState": Object {
              "skipsComponentDidUpdateOnNullish": true,
            },
          },
        },
      },
    },
  },
}
`;

exports[`<OrderBook /> renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderBook
    buyOrderError={null}
    contractDuration={0}
    contractMultiplier={0}
    getOrderBook={[Function]}
    loading={false}
    onRowClick={[MockFunction]}
    orderbook={
      Array [
        Object {
          "address": "0xaf0ff6be724648362c63921736505354af16ac3a",
          "contractGain": 0,
          "creatorAddress": "0xd8e09fbab17f30e1C2b2Ae85A26EA1F3F31267ef",
          "date": "11/09/2018",
          "orderId": "25",
          "price": "0.20000",
          "quantity": "200",
          "symbol": "ETH/USD",
          "tokenType": "Long",
        },
        Object {
          "address": "0xaf0ff6be724648362c63921736505354af16ac3a",
          "contractGain": 0,
          "creatorAddress": "0xc69c64c226fea62234afe4f5832a051ebc860540",
          "date": "11/09/2018",
          "orderId": "25",
          "price": "0.20000",
          "quantity": "200",
          "symbol": "ETH/USD",
          "tokenType": "Long",
        },
      ]
    }
    refreshPage={[MockFunction]}
    sendBuyOrder={[Function]}
    sendUnlistOrder={[Function]}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
    userAccount="0xd8e09fbab17f30e1C2b2Ae85A26EA1F3F31267ef"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <table
        className="table table-hover table-striped table-responsive"
      >
        <thead>
          <tr>
            <th
              colSpan="6"
            >
              Order Book
              <div
                className="warning"
              />
            </th>
          </tr>
          <tr>
            <th
              style={
                Object {
                  "width": "15%",
                }
              }
            >
              Order Id
            </th>
            <th
              style={
                Object {
                  "width": "40%",
                }
              }
            >
              Asset
            </th>
            <th
              style={
                Object {
                  "width": "15%",
                }
              }
            >
              Price (ETH)
            </th>
            <th
              style={
                Object {
                  "width": "15%",
                }
              }
            >
              Quantity
            </th>
            <th>
              Start Date
            </th>
            <th>
              Gain/Loss
            </th>
            <th />
          </tr>
        </thead>
        <tbody>
          <tr
            className="clickable"
            onClick={[Function]}
          >
            <td>
              25
            </td>
            <td>
              Long ETH/USD
            </td>
            <td>
              0.20000
            </td>
            <td>
              200
            </td>
            <td>
              11/09/2018
            </td>
            <td>
              <span>
                 
                 -- 
                 
              </span>
            </td>
            <td
              style={
                Object {
                  "padding": "0.4rem",
                }
              }
            >
              <button
                className="btn btn-theme btn-thin"
                onClick={[Function]}
              >
                Buy
              </button>
            </td>
            <td
              style={
                Object {
                  "padding": "0.4rem",
                }
              }
            >
              <button
                className="btn btn-thin"
                onClick={[Function]}
              >
                Unlist
              </button>
            </td>
          </tr>
          <tr
            className="clickable"
            onClick={[Function]}
          >
            <td>
              25
            </td>
            <td>
              Long ETH/USD
            </td>
            <td>
              0.20000
            </td>
            <td>
              200
            </td>
            <td>
              11/09/2018
            </td>
            <td>
              <span>
                 
                 -- 
                 
              </span>
            </td>
            <td
              style={
                Object {
                  "padding": "0.4rem",
                }
              }
            >
              <button
                className="btn btn-theme btn-thin"
                onClick={[Function]}
              >
                Buy
              </button>
            </td>
          </tr>
        </tbody>
      </table>,
      "className": "table-container order-book",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <thead>
            <tr>
              <th
                colSpan="6"
              >
                Order Book
                <div
                  className="warning"
                />
              </th>
            </tr>
            <tr>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Order Id
              </th>
              <th
                style={
                  Object {
                    "width": "40%",
                  }
                }
              >
                Asset
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Price (ETH)
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Quantity
              </th>
              <th>
                Start Date
              </th>
              <th>
                Gain/Loss
              </th>
              <th />
            </tr>
          </thead>,
          <tbody>
            <tr
              className="clickable"
              onClick={[Function]}
            >
              <td>
                25
              </td>
              <td>
                Long ETH/USD
              </td>
              <td>
                0.20000
              </td>
              <td>
                200
              </td>
              <td>
                11/09/2018
              </td>
              <td>
                <span>
                   
                   -- 
                   
                </span>
              </td>
              <td
                style={
                  Object {
                    "padding": "0.4rem",
                  }
                }
              >
                <button
                  className="btn btn-theme btn-thin"
                  onClick={[Function]}
                >
                  Buy
                </button>
              </td>
              <td
                style={
                  Object {
                    "padding": "0.4rem",
                  }
                }
              >
                <button
                  className="btn btn-thin"
                  onClick={[Function]}
                >
                  Unlist
                </button>
              </td>
            </tr>
            <tr
              className="clickable"
              onClick={[Function]}
            >
              <td>
                25
              </td>
              <td>
                Long ETH/USD
              </td>
              <td>
                0.20000
              </td>
              <td>
                200
              </td>
              <td>
                11/09/2018
              </td>
              <td>
                <span>
                   
                   -- 
                   
                </span>
              </td>
              <td
                style={
                  Object {
                    "padding": "0.4rem",
                  }
                }
              >
                <button
                  className="btn btn-theme btn-thin"
                  onClick={[Function]}
                >
                  Buy
                </button>
              </td>
            </tr>
          </tbody>,
        ],
        "className": "table table-hover table-striped table-responsive",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <tr>
                <th
                  colSpan="6"
                >
                  Order Book
                  <div
                    className="warning"
                  />
                </th>
              </tr>,
              <tr>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Order Id
                </th>
                <th
                  style={
                    Object {
                      "width": "40%",
                    }
                  }
                >
                  Asset
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Price (ETH)
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Quantity
                </th>
                <th>
                  Start Date
                </th>
                <th>
                  Gain/Loss
                </th>
                <th />
              </tr>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <th
                  colSpan="6"
                >
                  Order Book
                  <div
                    className="warning"
                  />
                </th>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Order Book",
                    <div
                      className="warning"
                    />,
                  ],
                  "colSpan": "6",
                },
                "ref": null,
                "rendered": Array [
                  "Order Book",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": null,
                      "className": "warning",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                ],
                "type": "th",
              },
              "type": "tr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Order Id
                  </th>,
                  <th
                    style={
                      Object {
                        "width": "40%",
                      }
                    }
                  >
                    Asset
                  </th>,
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Price (ETH)
                  </th>,
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Quantity
                  </th>,
                  <th>
                    Start Date
                  </th>,
                  <th>
                    Gain/Loss
                  </th>,
                  <th />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Order Id",
                    "style": Object {
                      "width": "15%",
                    },
                  },
                  "ref": null,
                  "rendered": "Order Id",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Asset",
                    "style": Object {
                      "width": "40%",
                    },
                  },
                  "ref": null,
                  "rendered": "Asset",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Price (ETH)",
                    "style": Object {
                      "width": "15%",
                    },
                  },
                  "ref": null,
                  "rendered": "Price (ETH)",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Quantity",
                    "style": Object {
                      "width": "15%",
                    },
                  },
                  "ref": null,
                  "rendered": "Quantity",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Start Date",
                  },
                  "ref": null,
                  "rendered": "Start Date",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Gain/Loss",
                  },
                  "ref": null,
                  "rendered": "Gain/Loss",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "th",
                },
              ],
              "type": "tr",
            },
          ],
          "type": "thead",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <tr
                className="clickable"
                onClick={[Function]}
              >
                <td>
                  25
                </td>
                <td>
                  Long ETH/USD
                </td>
                <td>
                  0.20000
                </td>
                <td>
                  200
                </td>
                <td>
                  11/09/2018
                </td>
                <td>
                  <span>
                     
                     -- 
                     
                  </span>
                </td>
                <td
                  style={
                    Object {
                      "padding": "0.4rem",
                    }
                  }
                >
                  <button
                    className="btn btn-theme btn-thin"
                    onClick={[Function]}
                  >
                    Buy
                  </button>
                </td>
                <td
                  style={
                    Object {
                      "padding": "0.4rem",
                    }
                  }
                >
                  <button
                    className="btn btn-thin"
                    onClick={[Function]}
                  >
                    Unlist
                  </button>
                </td>
              </tr>,
              <tr
                className="clickable"
                onClick={[Function]}
              >
                <td>
                  25
                </td>
                <td>
                  Long ETH/USD
                </td>
                <td>
                  0.20000
                </td>
                <td>
                  200
                </td>
                <td>
                  11/09/2018
                </td>
                <td>
                  <span>
                     
                     -- 
                     
                  </span>
                </td>
                <td
                  style={
                    Object {
                      "padding": "0.4rem",
                    }
                  }
                >
                  <button
                    className="btn btn-theme btn-thin"
                    onClick={[Function]}
                  >
                    Buy
                  </button>
                </td>
              </tr>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "25",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <td>
                    25
                  </td>,
                  <td>
                    Long ETH/USD
                  </td>,
                  <td>
                    0.20000
                  </td>,
                  <td>
                    200
                  </td>,
                  <td>
                    11/09/2018
                  </td>,
                  <td>
                    <span>
                       
                       -- 
                       
                    </span>
                  </td>,
                  <td
                    style={
                      Object {
                        "padding": "0.4rem",
                      }
                    }
                  >
                    <button
                      className="btn btn-theme btn-thin"
                      onClick={[Function]}
                    >
                      Buy
                    </button>
                  </td>,
                  <td
                    style={
                      Object {
                        "padding": "0.4rem",
                      }
                    }
                  >
                    <button
                      className="btn btn-thin"
                      onClick={[Function]}
                    >
                      Unlist
                    </button>
                  </td>,
                ],
                "className": "clickable",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "25",
                  },
                  "ref": null,
                  "rendered": "25",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Long ETH/USD",
                  },
                  "ref": null,
                  "rendered": "Long ETH/USD",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0.20000",
                  },
                  "ref": null,
                  "rendered": "0.20000",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "200",
                  },
                  "ref": null,
                  "rendered": "200",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "11/09/2018",
                  },
                  "ref": null,
                  "rendered": "11/09/2018",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span>
                       
                       -- 
                       
                    </span>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        " ",
                        " -- ",
                        " ",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      " ",
                      " -- ",
                      " ",
                    ],
                    "type": "span",
                  },
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="btn btn-theme btn-thin"
                      onClick={[Function]}
                    >
                      Buy
                    </button>,
                    "style": Object {
                      "padding": "0.4rem",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Buy",
                      "className": "btn btn-theme btn-thin",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Buy",
                    "type": "button",
                  },
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="btn btn-thin"
                      onClick={[Function]}
                    >
                      Unlist
                    </button>,
                    "style": Object {
                      "padding": "0.4rem",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Unlist",
                      "className": "btn btn-thin",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Unlist",
                    "type": "button",
                  },
                  "type": "td",
                },
              ],
              "type": "tr",
            },
            Object {
              "instance": null,
              "key": "25",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <td>
                    25
                  </td>,
                  <td>
                    Long ETH/USD
                  </td>,
                  <td>
                    0.20000
                  </td>,
                  <td>
                    200
                  </td>,
                  <td>
                    11/09/2018
                  </td>,
                  <td>
                    <span>
                       
                       -- 
                       
                    </span>
                  </td>,
                  <td
                    style={
                      Object {
                        "padding": "0.4rem",
                      }
                    }
                  >
                    <button
                      className="btn btn-theme btn-thin"
                      onClick={[Function]}
                    >
                      Buy
                    </button>
                  </td>,
                  undefined,
                ],
                "className": "clickable",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "25",
                  },
                  "ref": null,
                  "rendered": "25",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Long ETH/USD",
                  },
                  "ref": null,
                  "rendered": "Long ETH/USD",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0.20000",
                  },
                  "ref": null,
                  "rendered": "0.20000",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "200",
                  },
                  "ref": null,
                  "rendered": "200",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "11/09/2018",
                  },
                  "ref": null,
                  "rendered": "11/09/2018",
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span>
                       
                       -- 
                       
                    </span>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        " ",
                        " -- ",
                        " ",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      " ",
                      " -- ",
                      " ",
                    ],
                    "type": "span",
                  },
                  "type": "td",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="btn btn-theme btn-thin"
                      onClick={[Function]}
                    >
                      Buy
                    </button>,
                    "style": Object {
                      "padding": "0.4rem",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Buy",
                      "className": "btn btn-theme btn-thin",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Buy",
                    "type": "button",
                  },
                  "type": "td",
                },
                undefined,
              ],
              "type": "tr",
            },
          ],
          "type": "tbody",
        },
      ],
      "type": "table",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <table
          className="table table-hover table-striped table-responsive"
        >
          <thead>
            <tr>
              <th
                colSpan="6"
              >
                Order Book
                <div
                  className="warning"
                />
              </th>
            </tr>
            <tr>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Order Id
              </th>
              <th
                style={
                  Object {
                    "width": "40%",
                  }
                }
              >
                Asset
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Price (ETH)
              </th>
              <th
                style={
                  Object {
                    "width": "15%",
                  }
                }
              >
                Quantity
              </th>
              <th>
                Start Date
              </th>
              <th>
                Gain/Loss
              </th>
              <th />
            </tr>
          </thead>
          <tbody>
            <tr
              className="clickable"
              onClick={[Function]}
            >
              <td>
                25
              </td>
              <td>
                Long ETH/USD
              </td>
              <td>
                0.20000
              </td>
              <td>
                200
              </td>
              <td>
                11/09/2018
              </td>
              <td>
                <span>
                   
                   -- 
                   
                </span>
              </td>
              <td
                style={
                  Object {
                    "padding": "0.4rem",
                  }
                }
              >
                <button
                  className="btn btn-theme btn-thin"
                  onClick={[Function]}
                >
                  Buy
                </button>
              </td>
              <td
                style={
                  Object {
                    "padding": "0.4rem",
                  }
                }
              >
                <button
                  className="btn btn-thin"
                  onClick={[Function]}
                >
                  Unlist
                </button>
              </td>
            </tr>
            <tr
              className="clickable"
              onClick={[Function]}
            >
              <td>
                25
              </td>
              <td>
                Long ETH/USD
              </td>
              <td>
                0.20000
              </td>
              <td>
                200
              </td>
              <td>
                11/09/2018
              </td>
              <td>
                <span>
                   
                   -- 
                   
                </span>
              </td>
              <td
                style={
                  Object {
                    "padding": "0.4rem",
                  }
                }
              >
                <button
                  className="btn btn-theme btn-thin"
                  onClick={[Function]}
                >
                  Buy
                </button>
              </td>
            </tr>
          </tbody>
        </table>,
        "className": "table-container order-book",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <thead>
              <tr>
                <th
                  colSpan="6"
                >
                  Order Book
                  <div
                    className="warning"
                  />
                </th>
              </tr>
              <tr>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Order Id
                </th>
                <th
                  style={
                    Object {
                      "width": "40%",
                    }
                  }
                >
                  Asset
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Price (ETH)
                </th>
                <th
                  style={
                    Object {
                      "width": "15%",
                    }
                  }
                >
                  Quantity
                </th>
                <th>
                  Start Date
                </th>
                <th>
                  Gain/Loss
                </th>
                <th />
              </tr>
            </thead>,
            <tbody>
              <tr
                className="clickable"
                onClick={[Function]}
              >
                <td>
                  25
                </td>
                <td>
                  Long ETH/USD
                </td>
                <td>
                  0.20000
                </td>
                <td>
                  200
                </td>
                <td>
                  11/09/2018
                </td>
                <td>
                  <span>
                     
                     -- 
                     
                  </span>
                </td>
                <td
                  style={
                    Object {
                      "padding": "0.4rem",
                    }
                  }
                >
                  <button
                    className="btn btn-theme btn-thin"
                    onClick={[Function]}
                  >
                    Buy
                  </button>
                </td>
                <td
                  style={
                    Object {
                      "padding": "0.4rem",
                    }
                  }
                >
                  <button
                    className="btn btn-thin"
                    onClick={[Function]}
                  >
                    Unlist
                  </button>
                </td>
              </tr>
              <tr
                className="clickable"
                onClick={[Function]}
              >
                <td>
                  25
                </td>
                <td>
                  Long ETH/USD
                </td>
                <td>
                  0.20000
                </td>
                <td>
                  200
                </td>
                <td>
                  11/09/2018
                </td>
                <td>
                  <span>
                     
                     -- 
                     
                  </span>
                </td>
                <td
                  style={
                    Object {
                      "padding": "0.4rem",
                    }
                  }
                >
                  <button
                    className="btn btn-theme btn-thin"
                    onClick={[Function]}
                  >
                    Buy
                  </button>
                </td>
              </tr>
            </tbody>,
          ],
          "className": "table table-hover table-striped table-responsive",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <tr>
                  <th
                    colSpan="6"
                  >
                    Order Book
                    <div
                      className="warning"
                    />
                  </th>
                </tr>,
                <tr>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Order Id
                  </th>
                  <th
                    style={
                      Object {
                        "width": "40%",
                      }
                    }
                  >
                    Asset
                  </th>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Price (ETH)
                  </th>
                  <th
                    style={
                      Object {
                        "width": "15%",
                      }
                    }
                  >
                    Quantity
                  </th>
                  <th>
                    Start Date
                  </th>
                  <th>
                    Gain/Loss
                  </th>
                  <th />
                </tr>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <th
                    colSpan="6"
                  >
                    Order Book
                    <div
                      className="warning"
                    />
                  </th>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Order Book",
                      <div
                        className="warning"
                      />,
                    ],
                    "colSpan": "6",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Order Book",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": null,
                        "className": "warning",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                  ],
                  "type": "th",
                },
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Order Id
                    </th>,
                    <th
                      style={
                        Object {
                          "width": "40%",
                        }
                      }
                    >
                      Asset
                    </th>,
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Price (ETH)
                    </th>,
                    <th
                      style={
                        Object {
                          "width": "15%",
                        }
                      }
                    >
                      Quantity
                    </th>,
                    <th>
                      Start Date
                    </th>,
                    <th>
                      Gain/Loss
                    </th>,
                    <th />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Order Id",
                      "style": Object {
                        "width": "15%",
                      },
                    },
                    "ref": null,
                    "rendered": "Order Id",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Asset",
                      "style": Object {
                        "width": "40%",
                      },
                    },
                    "ref": null,
                    "rendered": "Asset",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Price (ETH)",
                      "style": Object {
                        "width": "15%",
                      },
                    },
                    "ref": null,
                    "rendered": "Price (ETH)",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Quantity",
                      "style": Object {
                        "width": "15%",
                      },
                    },
                    "ref": null,
                    "rendered": "Quantity",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Start Date",
                    },
                    "ref": null,
                    "rendered": "Start Date",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Gain/Loss",
                    },
                    "ref": null,
                    "rendered": "Gain/Loss",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
            ],
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <tr
                  className="clickable"
                  onClick={[Function]}
                >
                  <td>
                    25
                  </td>
                  <td>
                    Long ETH/USD
                  </td>
                  <td>
                    0.20000
                  </td>
                  <td>
                    200
                  </td>
                  <td>
                    11/09/2018
                  </td>
                  <td>
                    <span>
                       
                       -- 
                       
                    </span>
                  </td>
                  <td
                    style={
                      Object {
                        "padding": "0.4rem",
                      }
                    }
                  >
                    <button
                      className="btn btn-theme btn-thin"
                      onClick={[Function]}
                    >
                      Buy
                    </button>
                  </td>
                  <td
                    style={
                      Object {
                        "padding": "0.4rem",
                      }
                    }
                  >
                    <button
                      className="btn btn-thin"
                      onClick={[Function]}
                    >
                      Unlist
                    </button>
                  </td>
                </tr>,
                <tr
                  className="clickable"
                  onClick={[Function]}
                >
                  <td>
                    25
                  </td>
                  <td>
                    Long ETH/USD
                  </td>
                  <td>
                    0.20000
                  </td>
                  <td>
                    200
                  </td>
                  <td>
                    11/09/2018
                  </td>
                  <td>
                    <span>
                       
                       -- 
                       
                    </span>
                  </td>
                  <td
                    style={
                      Object {
                        "padding": "0.4rem",
                      }
                    }
                  >
                    <button
                      className="btn btn-theme btn-thin"
                      onClick={[Function]}
                    >
                      Buy
                    </button>
                  </td>
                </tr>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "25",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      25
                    </td>,
                    <td>
                      Long ETH/USD
                    </td>,
                    <td>
                      0.20000
                    </td>,
                    <td>
                      200
                    </td>,
                    <td>
                      11/09/2018
                    </td>,
                    <td>
                      <span>
                         
                         -- 
                         
                      </span>
                    </td>,
                    <td
                      style={
                        Object {
                          "padding": "0.4rem",
                        }
                      }
                    >
                      <button
                        className="btn btn-theme btn-thin"
                        onClick={[Function]}
                      >
                        Buy
                      </button>
                    </td>,
                    <td
                      style={
                        Object {
                          "padding": "0.4rem",
                        }
                      }
                    >
                      <button
                        className="btn btn-thin"
                        onClick={[Function]}
                      >
                        Unlist
                      </button>
                    </td>,
                  ],
                  "className": "clickable",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "25",
                    },
                    "ref": null,
                    "rendered": "25",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Long ETH/USD",
                    },
                    "ref": null,
                    "rendered": "Long ETH/USD",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "0.20000",
                    },
                    "ref": null,
                    "rendered": "0.20000",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "200",
                    },
                    "ref": null,
                    "rendered": "200",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "11/09/2018",
                    },
                    "ref": null,
                    "rendered": "11/09/2018",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span>
                         
                         -- 
                         
                      </span>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          " ",
                          " -- ",
                          " ",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        " -- ",
                        " ",
                      ],
                      "type": "span",
                    },
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="btn btn-theme btn-thin"
                        onClick={[Function]}
                      >
                        Buy
                      </button>,
                      "style": Object {
                        "padding": "0.4rem",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Buy",
                        "className": "btn btn-theme btn-thin",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Buy",
                      "type": "button",
                    },
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="btn btn-thin"
                        onClick={[Function]}
                      >
                        Unlist
                      </button>,
                      "style": Object {
                        "padding": "0.4rem",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Unlist",
                        "className": "btn btn-thin",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Unlist",
                      "type": "button",
                    },
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": "25",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <td>
                      25
                    </td>,
                    <td>
                      Long ETH/USD
                    </td>,
                    <td>
                      0.20000
                    </td>,
                    <td>
                      200
                    </td>,
                    <td>
                      11/09/2018
                    </td>,
                    <td>
                      <span>
                         
                         -- 
                         
                      </span>
                    </td>,
                    <td
                      style={
                        Object {
                          "padding": "0.4rem",
                        }
                      }
                    >
                      <button
                        className="btn btn-theme btn-thin"
                        onClick={[Function]}
                      >
                        Buy
                      </button>
                    </td>,
                    undefined,
                  ],
                  "className": "clickable",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "25",
                    },
                    "ref": null,
                    "rendered": "25",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Long ETH/USD",
                    },
                    "ref": null,
                    "rendered": "Long ETH/USD",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "0.20000",
                    },
                    "ref": null,
                    "rendered": "0.20000",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "200",
                    },
                    "ref": null,
                    "rendered": "200",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "11/09/2018",
                    },
                    "ref": null,
                    "rendered": "11/09/2018",
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span>
                         
                         -- 
                         
                      </span>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          " ",
                          " -- ",
                          " ",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        " -- ",
                        " ",
                      ],
                      "type": "span",
                    },
                    "type": "td",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="btn btn-theme btn-thin"
                        onClick={[Function]}
                      >
                        Buy
                      </button>,
                      "style": Object {
                        "padding": "0.4rem",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Buy",
                        "className": "btn btn-theme btn-thin",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Buy",
                      "type": "button",
                    },
                    "type": "td",
                  },
                  undefined,
                ],
                "type": "tr",
              },
            ],
            "type": "tbody",
          },
        ],
        "type": "table",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
