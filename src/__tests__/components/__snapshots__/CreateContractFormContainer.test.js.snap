// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CreateContractFormContainer /> render() renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateContractFormContainer
    anyTouched={false}
    array={
      Object {
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeAll": [Function],
        "shift": [Function],
        "splice": [Function],
        "swap": [Function],
        "unshift": [Function],
      }
    }
    asyncValidate={[Function]}
    asyncValidating={false}
    autofill={[Function]}
    blur={[Function]}
    change={[Function]}
    clearAsyncError={[Function]}
    clearFields={[Function]}
    clearSubmit={[Function]}
    clearSubmitErrors={[Function]}
    contractDates={Object {}}
    destroy={[Function]}
    dirty={false}
    dispatch={[Function]}
    form="create-contract"
    getContractOpenDates={[Function]}
    handleSubmit={[Function]}
    initialize={[Function]}
    initialized={false}
    invalid={false}
    pristine={true}
    pure={true}
    reset={[Function]}
    resetSection={[Function]}
    sendCreateContractOrder={[Function]}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        },
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
    submit={[Function]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[Function]}
    untouch={[Function]}
    userAccount=""
    valid={true}
    validate={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <CreateContractFormComponent
          contractDates={Object {}}
          handleSubmit={[Function]}
          onCurrencyChange={[Function]}
          onSubmit={[Function]}
        />,
        <div
          className="clickable"
          style={
            Object {
              "color": "blue",
              "marginTop": "20px",
              "textDecoration": "underline",
            }
          }
        >
          Already have a created contract?
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "contractDates": Object {},
          "formValues": undefined,
          "handleSubmit": [Function],
          "onCurrencyChange": [Function],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Already have a created contract?",
          "className": "clickable",
          "onClick": undefined,
          "style": Object {
            "color": "blue",
            "marginTop": "20px",
            "textDecoration": "underline",
          },
        },
        "ref": null,
        "rendered": "Already have a created contract?",
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <CreateContractFormComponent
            contractDates={Object {}}
            handleSubmit={[Function]}
            onCurrencyChange={[Function]}
            onSubmit={[Function]}
          />,
          <div
            className="clickable"
            style={
              Object {
                "color": "blue",
                "marginTop": "20px",
                "textDecoration": "underline",
              }
            }
          >
            Already have a created contract?
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "contractDates": Object {},
            "formValues": undefined,
            "handleSubmit": [Function],
            "onCurrencyChange": [Function],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Already have a created contract?",
            "className": "clickable",
            "onClick": undefined,
            "style": Object {
              "color": "blue",
              "marginTop": "20px",
              "textDecoration": "underline",
            },
          },
          "ref": null,
          "rendered": "Already have a created contract?",
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
