// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BlockProgress /> render() renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BlockProgress
    dispatch={[Function]}
    isProcessing={false}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): "",
  Symbol(enzyme.__nodes__): Array [
    "",
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<BlockProgress /> render() renders the component 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BlockProgress
    dispatch={[Function]}
    isProcessing={true}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="modal-background"
        />,
        <div
          className="modal"
        >
          <Card
            tag="div"
          >
            <CardHeader
              className="text-center"
              tag="div"
            >
              Processing...
            </CardHeader>
            <CardBody
              tag="div"
            >
              <CardImg
                alt="Card image cap"
                frameBorder="0"
                src="https://giphy.com/embed/K5kfQExKk731K"
                tag="iframe"
                top={true}
                width="100%"
              />
            </CardBody>
            <CardFooter
              className="text-center"
              tag="div"
            >
              This could take several minutes...
            </CardFooter>
          </Card>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "modal-background",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Card
            tag="div"
          >
            <CardHeader
              className="text-center"
              tag="div"
            >
              Processing...
            </CardHeader>
            <CardBody
              tag="div"
            >
              <CardImg
                alt="Card image cap"
                frameBorder="0"
                src="https://giphy.com/embed/K5kfQExKk731K"
                tag="iframe"
                top={true}
                width="100%"
              />
            </CardBody>
            <CardFooter
              className="text-center"
              tag="div"
            >
              This could take several minutes...
            </CardFooter>
          </Card>,
          "className": "modal",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <CardHeader
                className="text-center"
                tag="div"
              >
                Processing...
              </CardHeader>,
              <CardBody
                tag="div"
              >
                <CardImg
                  alt="Card image cap"
                  frameBorder="0"
                  src="https://giphy.com/embed/K5kfQExKk731K"
                  tag="iframe"
                  top={true}
                  width="100%"
                />
              </CardBody>,
              <CardFooter
                className="text-center"
                tag="div"
              >
                This could take several minutes...
              </CardFooter>,
            ],
            "tag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Processing...",
                "className": "text-center",
                "tag": "div",
              },
              "ref": null,
              "rendered": "Processing...",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <CardImg
                  alt="Card image cap"
                  frameBorder="0"
                  src="https://giphy.com/embed/K5kfQExKk731K"
                  tag="iframe"
                  top={true}
                  width="100%"
                />,
                "tag": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "alt": "Card image cap",
                  "frameBorder": "0",
                  "src": "https://giphy.com/embed/K5kfQExKk731K",
                  "tag": "iframe",
                  "top": true,
                  "width": "100%",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "This could take several minutes...",
                "className": "text-center",
                "tag": "div",
              },
              "ref": null,
              "rendered": "This could take several minutes...",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="modal-background"
          />,
          <div
            className="modal"
          >
            <Card
              tag="div"
            >
              <CardHeader
                className="text-center"
                tag="div"
              >
                Processing...
              </CardHeader>
              <CardBody
                tag="div"
              >
                <CardImg
                  alt="Card image cap"
                  frameBorder="0"
                  src="https://giphy.com/embed/K5kfQExKk731K"
                  tag="iframe"
                  top={true}
                  width="100%"
                />
              </CardBody>
              <CardFooter
                className="text-center"
                tag="div"
              >
                This could take several minutes...
              </CardFooter>
            </Card>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "modal-background",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Card
              tag="div"
            >
              <CardHeader
                className="text-center"
                tag="div"
              >
                Processing...
              </CardHeader>
              <CardBody
                tag="div"
              >
                <CardImg
                  alt="Card image cap"
                  frameBorder="0"
                  src="https://giphy.com/embed/K5kfQExKk731K"
                  tag="iframe"
                  top={true}
                  width="100%"
                />
              </CardBody>
              <CardFooter
                className="text-center"
                tag="div"
              >
                This could take several minutes...
              </CardFooter>
            </Card>,
            "className": "modal",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <CardHeader
                  className="text-center"
                  tag="div"
                >
                  Processing...
                </CardHeader>,
                <CardBody
                  tag="div"
                >
                  <CardImg
                    alt="Card image cap"
                    frameBorder="0"
                    src="https://giphy.com/embed/K5kfQExKk731K"
                    tag="iframe"
                    top={true}
                    width="100%"
                  />
                </CardBody>,
                <CardFooter
                  className="text-center"
                  tag="div"
                >
                  This could take several minutes...
                </CardFooter>,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Processing...",
                  "className": "text-center",
                  "tag": "div",
                },
                "ref": null,
                "rendered": "Processing...",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <CardImg
                    alt="Card image cap"
                    frameBorder="0"
                    src="https://giphy.com/embed/K5kfQExKk731K"
                    tag="iframe"
                    top={true}
                    width="100%"
                  />,
                  "tag": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "alt": "Card image cap",
                    "frameBorder": "0",
                    "src": "https://giphy.com/embed/K5kfQExKk731K",
                    "tag": "iframe",
                    "top": true,
                    "width": "100%",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "This could take several minutes...",
                  "className": "text-center",
                  "tag": "div",
                },
                "ref": null,
                "rendered": "This could take several minutes...",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
