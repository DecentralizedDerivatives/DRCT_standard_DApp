// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PriceChart /> renders empty component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PriceChart
    getPriceChartData={[Function]}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="pricechart__item"
      >
        <select
          className="pricechart__dropdown"
          onChange={[Function]}
        >
          <option
            className="pricechart__dropdown-item"
            name="BTC"
            value="BTC"
          >
            BTC
          </option>
          <option
            className="pricechart__dropdown-item"
            name="ETH"
            value="ETH"
          >
            ETH
          </option>
        </select>
        <div
          className="pricechart__item"
        >
          <div
            className="pricechart__item"
            id="container"
          />
        </div>
      </div>,
      "className": "pricechart__chart",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <select
            className="pricechart__dropdown"
            onChange={[Function]}
          >
            <option
              className="pricechart__dropdown-item"
              name="BTC"
              value="BTC"
            >
              BTC
            </option>
            <option
              className="pricechart__dropdown-item"
              name="ETH"
              value="ETH"
            >
              ETH
            </option>
          </select>,
          <div
            className="pricechart__item"
          >
            <div
              className="pricechart__item"
              id="container"
            />
          </div>,
        ],
        "className": "pricechart__item",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                className="pricechart__dropdown-item"
                name="BTC"
                value="BTC"
              >
                BTC
              </option>,
              <option
                className="pricechart__dropdown-item"
                name="ETH"
                value="ETH"
              >
                ETH
              </option>,
            ],
            "className": "pricechart__dropdown",
            "onChange": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "price-chart0",
              "nodeType": "host",
              "props": Object {
                "children": "BTC",
                "className": "pricechart__dropdown-item",
                "name": "BTC",
                "value": "BTC",
              },
              "ref": null,
              "rendered": "BTC",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "price-chart1",
              "nodeType": "host",
              "props": Object {
                "children": "ETH",
                "className": "pricechart__dropdown-item",
                "name": "ETH",
                "value": "ETH",
              },
              "ref": null,
              "rendered": "ETH",
              "type": "option",
            },
          ],
          "type": "select",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="pricechart__item"
              id="container"
            />,
            "className": "pricechart__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "pricechart__item",
              "id": "container",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="pricechart__item"
        >
          <select
            className="pricechart__dropdown"
            onChange={[Function]}
          >
            <option
              className="pricechart__dropdown-item"
              name="BTC"
              value="BTC"
            >
              BTC
            </option>
            <option
              className="pricechart__dropdown-item"
              name="ETH"
              value="ETH"
            >
              ETH
            </option>
          </select>
          <div
            className="pricechart__item"
          >
            <div
              className="pricechart__item"
              id="container"
            />
          </div>
        </div>,
        "className": "pricechart__chart",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <select
              className="pricechart__dropdown"
              onChange={[Function]}
            >
              <option
                className="pricechart__dropdown-item"
                name="BTC"
                value="BTC"
              >
                BTC
              </option>
              <option
                className="pricechart__dropdown-item"
                name="ETH"
                value="ETH"
              >
                ETH
              </option>
            </select>,
            <div
              className="pricechart__item"
            >
              <div
                className="pricechart__item"
                id="container"
              />
            </div>,
          ],
          "className": "pricechart__item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  className="pricechart__dropdown-item"
                  name="BTC"
                  value="BTC"
                >
                  BTC
                </option>,
                <option
                  className="pricechart__dropdown-item"
                  name="ETH"
                  value="ETH"
                >
                  ETH
                </option>,
              ],
              "className": "pricechart__dropdown",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "price-chart0",
                "nodeType": "host",
                "props": Object {
                  "children": "BTC",
                  "className": "pricechart__dropdown-item",
                  "name": "BTC",
                  "value": "BTC",
                },
                "ref": null,
                "rendered": "BTC",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "price-chart1",
                "nodeType": "host",
                "props": Object {
                  "children": "ETH",
                  "className": "pricechart__dropdown-item",
                  "name": "ETH",
                  "value": "ETH",
                },
                "ref": null,
                "rendered": "ETH",
                "type": "option",
              },
            ],
            "type": "select",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="pricechart__item"
                id="container"
              />,
              "className": "pricechart__item",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "pricechart__item",
                "id": "container",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<PriceChart /> renders the component 1`] = `undefined`;

exports[`<PriceChart /> renders the component 2`] = `undefined`;

exports[`<PriceChart /> renders the component 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PriceChart
    getPriceChartData={[Function]}
    pricechart={
      Array [
        Array [
          1533708000000,
          6551.98,
        ],
      ]
    }
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="pricechart__item"
      >
        <select
          className="pricechart__dropdown"
          onChange={[Function]}
        >
          <option
            className="pricechart__dropdown-item"
            name="BTC"
            value="BTC"
          >
            BTC
          </option>
          <option
            className="pricechart__dropdown-item"
            name="ETH"
            value="ETH"
          >
            ETH
          </option>
        </select>
        <div
          className="pricechart__item"
        >
          <div
            className="pricechart__item"
            id="container"
          />
        </div>
      </div>,
      "className": "pricechart__chart",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <select
            className="pricechart__dropdown"
            onChange={[Function]}
          >
            <option
              className="pricechart__dropdown-item"
              name="BTC"
              value="BTC"
            >
              BTC
            </option>
            <option
              className="pricechart__dropdown-item"
              name="ETH"
              value="ETH"
            >
              ETH
            </option>
          </select>,
          <div
            className="pricechart__item"
          >
            <div
              className="pricechart__item"
              id="container"
            />
          </div>,
        ],
        "className": "pricechart__item",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                className="pricechart__dropdown-item"
                name="BTC"
                value="BTC"
              >
                BTC
              </option>,
              <option
                className="pricechart__dropdown-item"
                name="ETH"
                value="ETH"
              >
                ETH
              </option>,
            ],
            "className": "pricechart__dropdown",
            "onChange": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "price-chart0",
              "nodeType": "host",
              "props": Object {
                "children": "BTC",
                "className": "pricechart__dropdown-item",
                "name": "BTC",
                "value": "BTC",
              },
              "ref": null,
              "rendered": "BTC",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "price-chart1",
              "nodeType": "host",
              "props": Object {
                "children": "ETH",
                "className": "pricechart__dropdown-item",
                "name": "ETH",
                "value": "ETH",
              },
              "ref": null,
              "rendered": "ETH",
              "type": "option",
            },
          ],
          "type": "select",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="pricechart__item"
              id="container"
            />,
            "className": "pricechart__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "pricechart__item",
              "id": "container",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="pricechart__item"
        >
          <select
            className="pricechart__dropdown"
            onChange={[Function]}
          >
            <option
              className="pricechart__dropdown-item"
              name="BTC"
              value="BTC"
            >
              BTC
            </option>
            <option
              className="pricechart__dropdown-item"
              name="ETH"
              value="ETH"
            >
              ETH
            </option>
          </select>
          <div
            className="pricechart__item"
          >
            <div
              className="pricechart__item"
              id="container"
            />
          </div>
        </div>,
        "className": "pricechart__chart",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <select
              className="pricechart__dropdown"
              onChange={[Function]}
            >
              <option
                className="pricechart__dropdown-item"
                name="BTC"
                value="BTC"
              >
                BTC
              </option>
              <option
                className="pricechart__dropdown-item"
                name="ETH"
                value="ETH"
              >
                ETH
              </option>
            </select>,
            <div
              className="pricechart__item"
            >
              <div
                className="pricechart__item"
                id="container"
              />
            </div>,
          ],
          "className": "pricechart__item",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  className="pricechart__dropdown-item"
                  name="BTC"
                  value="BTC"
                >
                  BTC
                </option>,
                <option
                  className="pricechart__dropdown-item"
                  name="ETH"
                  value="ETH"
                >
                  ETH
                </option>,
              ],
              "className": "pricechart__dropdown",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "price-chart0",
                "nodeType": "host",
                "props": Object {
                  "children": "BTC",
                  "className": "pricechart__dropdown-item",
                  "name": "BTC",
                  "value": "BTC",
                },
                "ref": null,
                "rendered": "BTC",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "price-chart1",
                "nodeType": "host",
                "props": Object {
                  "children": "ETH",
                  "className": "pricechart__dropdown-item",
                  "name": "ETH",
                  "value": "ETH",
                },
                "ref": null,
                "rendered": "ETH",
                "type": "option",
              },
            ],
            "type": "select",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="pricechart__item"
                id="container"
              />,
              "className": "pricechart__item",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "pricechart__item",
                "id": "container",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
