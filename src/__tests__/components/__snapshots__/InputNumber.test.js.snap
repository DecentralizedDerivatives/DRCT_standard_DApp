// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<InputNumber /> renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <InputNumber
    addonLabel="label"
    input={Object {}}
    meta={
      Object {
        "error": "required",
        "touched": true,
      }
    }
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          className="input-label"
        />,
        <input
          min="0"
          step=".00001"
          type="number"
        />,
        <InputGroupAddon
          addonType="append"
          tag="div"
        >
          label
        </InputGroupAddon>,
        <span
          className="input-error"
        >
          required
        </span>,
      ],
      "className": "input-number",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "input-label",
          "htmlFor": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": undefined,
          "min": "0",
          "step": ".00001",
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "addonType": "append",
          "children": "label",
          "tag": "div",
        },
        "ref": null,
        "rendered": "label",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "required",
          "className": "input-error",
        },
        "ref": null,
        "rendered": "required",
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            className="input-label"
          />,
          <input
            min="0"
            step=".00001"
            type="number"
          />,
          <InputGroupAddon
            addonType="append"
            tag="div"
          >
            label
          </InputGroupAddon>,
          <span
            className="input-error"
          >
            required
          </span>,
        ],
        "className": "input-number",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "input-label",
            "htmlFor": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": undefined,
            "min": "0",
            "step": ".00001",
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "addonType": "append",
            "children": "label",
            "tag": "div",
          },
          "ref": null,
          "rendered": "label",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "required",
            "className": "input-error",
          },
          "ref": null,
          "rendered": "required",
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
