// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CashOut /> render() renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CashOut
    cashOutError={null}
    cashOutTx=""
    getUserBalance={[Function]}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
    userBalance={0}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="modal-background"
        />,
        <div
          className="modal"
        >
          <div
            className="cashout-form"
            id="cashout-form"
          >
            <h3
              className="center-text"
            >
              Cash Out Request
            </h3>
            <h4
              className="user-balance"
            >
              Your Balance: 
              0
               Ether
            </h4>
            <Connect(ReduxForm) />
            
          </div>
        </div>,
      ],
      "className": "create-contract",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "modal-background",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="cashout-form"
            id="cashout-form"
          >
            <h3
              className="center-text"
            >
              Cash Out Request
            </h3>
            <h4
              className="user-balance"
            >
              Your Balance: 
              0
               Ether
            </h4>
            <Connect(ReduxForm) />
            
          </div>,
          "className": "modal",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="center-text"
              >
                Cash Out Request
              </h3>,
              <h4
                className="user-balance"
              >
                Your Balance: 
                0
                 Ether
              </h4>,
              <Connect(ReduxForm) />,
              "",
            ],
            "className": "cashout-form",
            "id": "cashout-form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Cash Out Request",
                "className": "center-text",
              },
              "ref": null,
              "rendered": "Cash Out Request",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Your Balance: ",
                  0,
                  " Ether",
                ],
                "className": "user-balance",
              },
              "ref": null,
              "rendered": Array [
                "Your Balance: ",
                0,
                " Ether",
              ],
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "alertUserBalance": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "",
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="modal-background"
          />,
          <div
            className="modal"
          >
            <div
              className="cashout-form"
              id="cashout-form"
            >
              <h3
                className="center-text"
              >
                Cash Out Request
              </h3>
              <h4
                className="user-balance"
              >
                Your Balance: 
                0
                 Ether
              </h4>
              <Connect(ReduxForm) />
              
            </div>
          </div>,
        ],
        "className": "create-contract",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "modal-background",
            "onClick": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="cashout-form"
              id="cashout-form"
            >
              <h3
                className="center-text"
              >
                Cash Out Request
              </h3>
              <h4
                className="user-balance"
              >
                Your Balance: 
                0
                 Ether
              </h4>
              <Connect(ReduxForm) />
              
            </div>,
            "className": "modal",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3
                  className="center-text"
                >
                  Cash Out Request
                </h3>,
                <h4
                  className="user-balance"
                >
                  Your Balance: 
                  0
                   Ether
                </h4>,
                <Connect(ReduxForm) />,
                "",
              ],
              "className": "cashout-form",
              "id": "cashout-form",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Cash Out Request",
                  "className": "center-text",
                },
                "ref": null,
                "rendered": "Cash Out Request",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Your Balance: ",
                    0,
                    " Ether",
                  ],
                  "className": "user-balance",
                },
                "ref": null,
                "rendered": Array [
                  "Your Balance: ",
                  0,
                  " Ether",
                ],
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "alertUserBalance": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "",
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
