// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MyPortfolio /> renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MyPortfolio
    dispatch={[Function]}
    getUserAccount={[Function]}
    getUserPositions={[Function]}
    getUserTransactions={[Function]}
    metamask={true}
    network={4}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        },
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      }
    }
    userAccount="0xd8e09fbab17f30e1C2b2Ae85A26EA1F3F31267ef"
    verified={true}
    whiteListed={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(MyPositions) />,
        <Connect(MyTransactions) />,
        null,
        <div
          className="btn btn-theme create-contract-btn"
          onClick={[Function]}
        >
          Create Contract
        </div>,
        null,
        <div
          id="cashout-button"
        >
          <button
            className="btn btn-theme create-contract-btn"
            onClick={[Function]}
          >
            Cash Out
          </button>
        </div>,
      ],
      "id": "portfolio",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Create Contract",
          "className": "btn btn-theme create-contract-btn",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Create Contract",
        "type": "div",
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-theme create-contract-btn"
            onClick={[Function]}
          >
            Cash Out
          </button>,
          "id": "cashout-button",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Cash Out",
            "className": "btn btn-theme create-contract-btn",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Cash Out",
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(MyPositions) />,
          <Connect(MyTransactions) />,
          null,
          <div
            className="btn btn-theme create-contract-btn"
            onClick={[Function]}
          >
            Create Contract
          </div>,
          null,
          <div
            id="cashout-button"
          >
            <button
              className="btn btn-theme create-contract-btn"
              onClick={[Function]}
            >
              Cash Out
            </button>
          </div>,
        ],
        "id": "portfolio",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create Contract",
            "className": "btn btn-theme create-contract-btn",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Create Contract",
          "type": "div",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-theme create-contract-btn"
              onClick={[Function]}
            >
              Cash Out
            </button>,
            "id": "cashout-button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Cash Out",
              "className": "btn btn-theme create-contract-btn",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Cash Out",
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
